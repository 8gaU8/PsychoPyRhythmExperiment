<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.1.2">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="True" valType="bool" updates="None" name="Save csv file"/>
    <Param val="True" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="2022.2.5" valType="str" updates="None" name="Use version"/>
    <Param val="[1440, 900]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="rhythm_trial_exp" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <PolygonComponent name="cross_white_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.6, 0, 0.7" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="0.6, 0, 0.7" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_white_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="cross_colored" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.6, 0.7, 0" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="0.6, 0.7, 0" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_colored" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="11" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'b', 'n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$ans" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="11" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <KeyboardComponent name="key_resp_moving" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_moving" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="cross_manage" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="cross_white.setAutoDraw(True)&amp;#10;win.flip()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="core.wait(1)&amp;#10;cross_white.setAutoDraw(False)&amp;#10;win.flip()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="cross_manage" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="sound_stim" plugin="None">
        <Param val="import sys&amp;#10;sys.path.append(&quot;./pkgs&quot;)&amp;#10;&amp;#10;from rhythm_trial_code.main import run_stim" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="delay = delay_series[sound_stim_routine_index]&amp;#10;scale = scale_series[sound_stim_routine_index]&amp;#10;run_stim(delay=delay, scale=scale)&amp;#10;trials.addData('stim.delay', delay)&amp;#10;trials.addData('stim.scale', scale)&amp;#10;sound_stim_routine_index += 1" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="sound_stim_started_time = core.getTime()&amp;#10;run_stim(delay=delay, scale=scale, stim_sound_file='./sound/SD0050.WAV', sound=msg!=&quot;REST&quot;)&amp;#10;sound_stim_end_time = core.getTime()&amp;#10;trials.addData('stim.start_time', sound_stim_started_time)&amp;#10;trials.addData('stim.end_time', sound_stim_end_time)&amp;#10;trials.addData('stim.delay', delay)&amp;#10;trials.addData('stim.scale', scale)&amp;#10;trials.addData('stim.ans', ans)&amp;#10;trials.addData('stim.msg', msg)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="sound_stim" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="blank">
      <StaticComponent name="ISI" plugin="None">
        <Param val="" valType="code" updates="None" name="code"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="ISI" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </StaticComponent>
    </Routine>
    <Routine name="instruction">
      <TextComponent name="text_norm" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Osaka" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_norm" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="リズム実験（テスト）&amp;#10;&amp;#10;クロスが表示されたあとにキーボードで回答&amp;#10;Probe Toneが早ければb&amp;#10;遅ければn&amp;#10;&amp;#10;Spaceで開始&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="1.8" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_instruct" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_instruct" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="text_align" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Code components should usually appear at the top&amp;#10;# of the routine. This one has to appear after the&amp;#10;# text component it refers to.&amp;#10;text_norm.alignText= 'center'" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="// Code component set to Both&amp;#10;text_norm.setAlignHoriz('left')" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="text_align" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="ending_message">
      <TextComponent name="text_norm_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Osaka" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_norm_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="実験はこれで終了です" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="1.8" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_instruct_3" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_instruct_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="text_align_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Code components should usually appear at the top&amp;#10;# of the routine. This one has to appear after the&amp;#10;# text component it refers to.&amp;#10;text_norm.alignText= 'left'" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="// Code component set to Both&amp;#10;text_norm.setAlignHoriz('left')" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="text_align_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="break_section">
      <TextComponent name="text_norm_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Osaka" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_norm_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="休憩&amp;#10;&amp;#10;Spaceで再開" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="1.8" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_instruct_2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_instruct_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="text_align_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Code components should usually appear at the top&amp;#10;# of the routine. This one has to appear after the&amp;#10;# text component it refers to.&amp;#10;text_norm.alignText= 'center'" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="// Code component set to Both&amp;#10;text_norm.setAlignHoriz('left')" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="text_align_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="fixation_cross">
      <PolygonComponent name="cross_white" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.6, 0, 0.7" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="0.6, 0, 0.7" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_white" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="trial_inst">
      <TextComponent name="text_norm_4" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Osaka" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_norm_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$msg" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="1.8" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="text_align_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Code components should usually appear at the top&amp;#10;# of the routine. This one has to appear after the&amp;#10;# text component it refers to.&amp;#10;text_norm.alignText= 'left'" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="// Code component set to Both&amp;#10;text_norm.setAlignHoriz('left')" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="text_align_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="manage_serial">
      <CodeComponent name="code" plugin="None">
        <Param val="import time&amp;#10;import threading&amp;#10;#from serial import Serial&amp;#10;from rhythm_trial_code.dummy_serial import Serial&amp;#10;&amp;#10;connected = True&amp;#10;PULSE_WIDTH = 0.01&amp;#10;&amp;#10;&amp;#10;def read_thread(port: Serial):&amp;#10;    while connected:&amp;#10;        if port.in_waiting &gt; 0:&amp;#10;            print(&quot;0x%X&quot; % (port.read(1)))&amp;#10;&amp;#10;&amp;#10;# Open the Windows device manager, search for the &quot;TriggerBox VirtualSerial Port (COM6)&quot;&amp;#10;# in &quot;Ports /COM &amp; LPT)&quot; and enter the COM port number in the constructor.&amp;#10;port = Serial(&quot;COM6&quot;)&amp;#10;# Start the read thread&amp;#10;thread = threading.Thread(target=read_thread, args=(port,))&amp;#10;thread.start()&amp;#10;# reset Port&amp;#10;port.write([0x00])" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="connected = False&amp;#10;thread.join(1.0)&amp;#10;# Close the serial port&amp;#10;port.close()" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="instruction"/>
    <Routine name="manage_serial"/>
    <Routine name="blank"/>
    <LoopInitiator loopType="TrialHandler" name="session">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trials_file_name', 'exp_params/0.csv')]), OrderedDict([('trials_file_name', 'exp_params/1.csv')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="exp_params/session.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="session" valType="code"/>
      <Param name="random seed" updates="None" val="0" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('delay', 0.1764052345967664), ('scale', 0.1764052345967664), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.040015720836722335), ('scale', 0.040015720836722335), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.09787379841057392), ('scale', 0.09787379841057392), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', 0.2240893199201458), ('scale', 0.2240893199201458), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.18675579901499675), ('scale', 0.18675579901499675), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.0977277879876411), ('scale', -0.0977277879876411), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.09500884175255894), ('scale', 0.09500884175255894), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.015135720829769791), ('scale', -0.015135720829769791), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.010321885179355785), ('scale', -0.010321885179355785), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.04105985019383723), ('scale', 0.04105985019383723), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.0144043571160878), ('scale', 0.0144043571160878), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.1454273506962975), ('scale', 0.1454273506962975), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.07610377251469935), ('scale', 0.07610377251469935), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', 0.012167501649282842), ('scale', 0.012167501649282842), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.04438632327454257), ('scale', 0.04438632327454257), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.033367432737426685), ('scale', 0.033367432737426685), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.14940790731576062), ('scale', 0.14940790731576062), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.020515826376580087), ('scale', -0.020515826376580087), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', 0.03130677016509014), ('scale', 0.03130677016509014), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.08540957393017247), ('scale', -0.08540957393017247), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.25529898158340786), ('scale', -0.25529898158340786), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.06536185954403606), ('scale', 0.06536185954403606), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.08644361988595058), ('scale', 0.08644361988595058), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.0742165020406442), ('scale', -0.0742165020406442), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.2269754623987608), ('scale', 0.2269754623987608), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.1454365674598765), ('scale', -0.1454365674598765), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.004575851730144607), ('scale', 0.004575851730144607), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.018718385002583358), ('scale', -0.018718385002583358), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', 0.15327792143584576), ('scale', 0.15327792143584576), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.1469358769900285), ('scale', 0.1469358769900285), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.015494742569691631), ('scale', 0.015494742569691631), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.03781625196021736), ('scale', 0.03781625196021736), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.08877857476301128), ('scale', -0.08877857476301128), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.1980796468223927), ('scale', -0.1980796468223927), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.034791214932615264), ('scale', -0.034791214932615264), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.015634896910398006), ('scale', 0.015634896910398006), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.12302906807277207), ('scale', 0.12302906807277207), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.12023798487844113), ('scale', 0.12023798487844113), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.03873268174079523), ('scale', -0.03873268174079523), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.030230275057533562), ('scale', -0.030230275057533562), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.10485529650670927), ('scale', -0.10485529650670927), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.14200179371789753), ('scale', -0.14200179371789753), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.17062701906250127), ('scale', -0.17062701906250127), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.19507753952317894), ('scale', 0.19507753952317894), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.05096521817516536), ('scale', -0.05096521817516536), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.04380743016111864), ('scale', -0.04380743016111864), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.1252795360049926), ('scale', -0.1252795360049926), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.07774903558319103), ('scale', 0.07774903558319103), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.16138978475579516), ('scale', -0.16138978475579516), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.021274028021396867), ('scale', -0.021274028021396867), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.08954665611936757), ('scale', -0.08954665611936757), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.0386902497859262), ('scale', 0.0386902497859262), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.0510805137568873), ('scale', -0.0510805137568873), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.1180632184122412), ('scale', -0.1180632184122412), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.002818222833865487), ('scale', -0.002818222833865487), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', 0.04283318705304177), ('scale', 0.04283318705304177), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.006651722238316789), ('scale', 0.006651722238316789), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.030247189773978136), ('scale', 0.030247189773978136), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.06343220936809636), ('scale', -0.06343220936809636), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.03627411659871382), ('scale', -0.03627411659871382), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.0672460447775951), ('scale', -0.0672460447775951), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.03595531615405413), ('scale', -0.03595531615405413), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.0813146282044454), ('scale', -0.0813146282044454), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.17262826023316769), ('scale', -0.17262826023316769), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.017742614225375285), ('scale', 0.017742614225375285), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.040178093620826194), ('scale', -0.040178093620826194), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.16301983469660447), ('scale', -0.16301983469660447), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', 0.04627822555257742), ('scale', 0.04627822555257742), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.09072983643832422), ('scale', -0.09072983643832422), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.005194539579613896), ('scale', 0.005194539579613896), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', 0.07290905621775369), ('scale', 0.07290905621775369), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.012898291075741069), ('scale', 0.012898291075741069), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', 0.11394006845433008), ('scale', 0.11394006845433008), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.12348258203536527), ('scale', -0.12348258203536527), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.040234164117754906), ('scale', 0.040234164117754906), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.06848100909403132), ('scale', -0.06848100909403132), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.08707971491818818), ('scale', -0.08707971491818818), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.05788496647644155), ('scale', -0.05788496647644155), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.031155253212737263), ('scale', -0.031155253212737263), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.005616534222974545), ('scale', 0.005616534222974545), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.11651498407833565), ('scale', -0.11651498407833565), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.09008264869541872), ('scale', 0.09008264869541872), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.046566243973045984), ('scale', 0.046566243973045984), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.1536243686277224), ('scale', -0.1536243686277224), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.14882521937955998), ('scale', 0.14882521937955998), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', 0.18958891760305832), ('scale', 0.18958891760305832), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.11787795711596508), ('scale', 0.11787795711596508), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.01799248358123509), ('scale', -0.01799248358123509), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.10707526215105426), ('scale', -0.10707526215105426), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.10544517269311368), ('scale', 0.10544517269311368), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.04031769469731797), ('scale', -0.04031769469731797), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.12224450703824274), ('scale', 0.12224450703824274), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.02082749780768603), ('scale', 0.02082749780768603), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.09766390364837127), ('scale', 0.09766390364837127), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', 0.03563663971744019), ('scale', 0.03563663971744019), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.07065731681919482), ('scale', 0.07065731681919482), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.001050002072082048), ('scale', 0.001050002072082048), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.17858704939058356), ('scale', 0.17858704939058356), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.012691209270361992), ('scale', 0.012691209270361992), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.040198936344470165), ('scale', 0.040198936344470165), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.18831506970562545), ('scale', 0.18831506970562545), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.13477590611424464), ('scale', -0.13477590611424464), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.12704849984857336), ('scale', -0.12704849984857336), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.09693967081580113), ('scale', 0.09693967081580113), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.117312340511416), ('scale', -0.117312340511416), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.19436211856492927), ('scale', 0.19436211856492927), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.041361898075974735), ('scale', -0.041361898075974735), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.07474548114407578), ('scale', -0.07474548114407578), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.19229420264803848), ('scale', 0.19229420264803848), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', 0.14805147914344244), ('scale', 0.14805147914344244), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.18675589604265697), ('scale', 0.18675589604265697), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.09060446582753852), ('scale', 0.09060446582753852), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.08612256850547026), ('scale', -0.08612256850547026), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.19100649530990335), ('scale', 0.19100649530990335), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.02680033709513804), ('scale', -0.02680033709513804), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.08024563957963952), ('scale', 0.08024563957963952), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', 0.0947251967773748), ('scale', 0.0947251967773748), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.015501009309083418), ('scale', -0.015501009309083418), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.061407937034608034), ('scale', 0.061407937034608034), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', 0.09222066715665267), ('scale', 0.09222066715665267), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.037642553115562936), ('scale', 0.037642553115562936), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.10994007905841946), ('scale', -0.10994007905841946), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', 0.0298238174206056), ('scale', 0.0298238174206056), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.13263858966870304), ('scale', 0.13263858966870304), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.06945678597313655), ('scale', -0.06945678597313655), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.014963454032767075), ('scale', -0.014963454032767075), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.04351535517216375), ('scale', -0.04351535517216375), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.1849263728479342), ('scale', 0.1849263728479342), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.06722947570124355), ('scale', 0.06722947570124355), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.04074618362411105), ('scale', 0.04074618362411105), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.07699160744453165), ('scale', -0.07699160744453165), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.05392491912918173), ('scale', 0.05392491912918173), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.06743326606573763), ('scale', -0.06743326606573763), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', 0.0031830558274351184), ('scale', 0.0031830558274351184), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.0635846078378881), ('scale', -0.0635846078378881), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.06764332949464998), ('scale', 0.06764332949464998), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.0576590816614941), ('scale', 0.0576590816614941), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.020829875557799492), ('scale', -0.020829875557799492), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.03960067126616453), ('scale', 0.03960067126616453), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.10930615087305058), ('scale', -0.10930615087305058), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.14912575927056054), ('scale', -0.14912575927056054), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.043939170126453694), ('scale', 0.043939170126453694), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.016667349537252903), ('scale', 0.016667349537252903), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.06350314368921063), ('scale', 0.06350314368921063), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.23831447748639425), ('scale', 0.23831447748639425), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', 0.09444794869904137), ('scale', 0.09444794869904137), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.09128222254441587), ('scale', -0.09128222254441587), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.1117016288095853), ('scale', 0.1117016288095853), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.13159074105115212), ('scale', -0.13159074105115212), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.0461584604814709), ('scale', -0.0461584604814709), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.006824160532463124), ('scale', -0.006824160532463124), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.17133427216493669), ('scale', 0.17133427216493669), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.07447548220484401), ('scale', -0.07447548220484401), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.08264385386590145), ('scale', -0.08264385386590145), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.00984525244254323), ('scale', -0.00984525244254323), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.06634782863621072), ('scale', -0.06634782863621072), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.1126635922106507), ('scale', 0.1126635922106507), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.10799315083634234), ('scale', -0.10799315083634234), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.11474686524111025), ('scale', -0.11474686524111025), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.043782004474443414), ('scale', -0.043782004474443414), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.049803245069230485), ('scale', -0.049803245069230485), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', 0.19295320538169855), ('scale', 0.19295320538169855), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.09494208069257608), ('scale', 0.09494208069257608), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.00875512413851909), ('scale', 0.00875512413851909), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.1225435518830168), ('scale', -0.1225435518830168), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', 0.08443629764015471), ('scale', 0.08443629764015471), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.10002153473895647), ('scale', -0.10002153473895647), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.15447710967776118), ('scale', -0.15447710967776118), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', 0.1188029792352302), ('scale', 0.1188029792352302), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.03169426119248497), ('scale', 0.03169426119248497), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.0920858823780819), ('scale', 0.0920858823780819), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.03187276529430212), ('scale', 0.03187276529430212), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', 0.08568306119026912), ('scale', 0.08568306119026912), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.06510255933001469), ('scale', -0.06510255933001469), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.10342428417844647), ('scale', -0.10342428417844647), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.0681594518281627), ('scale', 0.0681594518281627), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.08034096641738411), ('scale', -0.08034096641738411), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.06895497777502006), ('scale', -0.06895497777502006), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.04555325035173432), ('scale', -0.04555325035173432), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', 0.0017479159025056731), ('scale', 0.0017479159025056731), ('ans', 'n'), ('msg', None)]), OrderedDict([('delay', -0.035399391125348394), ('scale', -0.035399391125348394), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.13749512934180189), ('scale', -0.13749512934180189), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.06436184028328905), ('scale', -0.06436184028328905), ('ans', 'b'), ('msg', '動いてください')]), OrderedDict([('delay', -0.22234031522244269), ('scale', -0.22234031522244269), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', 0.06252314510271875), ('scale', 0.06252314510271875), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.16020576556067478), ('scale', -0.16020576556067478), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', -0.11043833394284508), ('scale', -0.11043833394284508), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.0052165079260974405), ('scale', 0.0052165079260974405), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.07395629963913132), ('scale', -0.07395629963913132), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.1543014595406736), ('scale', 0.1543014595406736), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', -0.12928569097234485), ('scale', -0.12928569097234485), ('ans', 'b'), ('msg', None)]), OrderedDict([('delay', 0.02670508693491829), ('scale', 0.02670508693491829), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.003928281822749561), ('scale', -0.003928281822749561), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.11680934977411975), ('scale', -0.11680934977411975), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.052327666053175376), ('scale', 0.052327666053175376), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', -0.017154633122224813), ('scale', -0.017154633122224813), ('ans', 'b'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.07717905512136675), ('scale', 0.07717905512136675), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.08235041539637315), ('scale', 0.08235041539637315), ('ans', 'n'), ('msg', '動かないでください')]), OrderedDict([('delay', 0.21632359492806896), ('scale', 0.21632359492806896), ('ans', 'n'), ('msg', '動いてください')]), OrderedDict([('delay', 0.1336527949436392), ('scale', 0.1336527949436392), ('ans', 'n'), ('msg', '動かないでください')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$trials_file_name" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="0" valType="code"/>
    </LoopInitiator>
    <Routine name="trial_inst"/>
    <Routine name="fixation_cross"/>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
    <Routine name="break_section"/>
    <Routine name="blank"/>
    <LoopTerminator name="session"/>
    <Routine name="ending_message"/>
  </Flow>
</PsychoPy2experiment>
